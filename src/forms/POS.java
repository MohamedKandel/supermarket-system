/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import entity.pos;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import supermarket.Tools;
//import org.opengts.dbtools.DBConnection;

/**
 *
 * @author Mohamed
 */
public class POS extends javax.swing.JFrame {

    /**
     * Creates new form POS
     */
    public POS() {
        initComponents();
    }

    String username;

    public POS(String user) {
        initComponents();
        this.username = user;
    }

    java.sql.ResultSet rs;
    PreparedStatement insert;
    java.sql.Connection con;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_code = new control.JTextBox(20);
        jLabel3 = new javax.swing.JLabel();
        txt_name = new control.JTextBox(20);
        txt_price = new control.JTextBox(20);
        jLabel4 = new javax.swing.JLabel();
        txt_qty = new control.JTextBox(20);
        jLabel5 = new javax.swing.JLabel();
        btn_add = new control.JMyButton();
        btn_del = new control.JMyButton();
        jLabel6 = new javax.swing.JLabel();
        lbl_sub = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbl_total = new javax.swing.JLabel();
        txt_cash = new control.JTextBox(20);
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbl_balance = new javax.swing.JLabel();
        btn_print = new control.JMyButton();
        btn_back = new control.JMyButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        lbl_user = new javax.swing.JLabel();
        log = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_bill = new javax.swing.JTextArea();
        reset = new control.JMyButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Point of Sales");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel2.setText("BarCode :");

        txt_code.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codeKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setText("Product Name :");

        txt_name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_price.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel4.setText("Price :");

        txt_qty.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_qtyKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel5.setText("QTY :");

        btn_add.setText("ADD");
        btn_add.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_del.setText("Delete");
        btn_del.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel6.setText("Sub Total :");

        lbl_sub.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbl_sub.setText("0.0");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel7.setText("Total :");

        lbl_total.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbl_total.setText("0.0");

        txt_cash.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_cash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cashKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel8.setText("Cash :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel9.setText("Balance :");

        lbl_balance.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbl_balance.setText("0.0");
        lbl_balance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lbl_balanceKeyPressed(evt);
            }
        });

        btn_print.setText("Print");
        btn_print.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });

        btn_back.setText("Back");
        btn_back.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Price", "QTY", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        tbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);

        lbl_user.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_user.setText("jLabel11");

        log.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        log.setText("Logged as :");

        txt_bill.setColumns(20);
        txt_bill.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_bill.setRows(5);
        jScrollPane2.setViewportView(txt_bill);

        reset.setText("Reset Bill");
        reset.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel2)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(txt_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel3)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(txt_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(18, 18, 18)
                                                .addComponent(txt_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn_del, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(40, 40, 40)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel6))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbl_total)
                                        .addComponent(txt_cash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbl_sub)
                                        .addComponent(lbl_balance)))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(btn_print, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(log)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbl_user)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(log)
                            .addComponent(lbl_user))
                        .addGap(23, 23, 23)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txt_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txt_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(lbl_sub))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_del, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(lbl_total))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_cash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(lbl_balance))
                        .addGap(28, 28, 28)
                        .addComponent(btn_print, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
        add();
    }//GEN-LAST:event_btn_addActionPerformed

    DefaultTableModel model;

    private void setTable() {
        model = (DefaultTableModel) tbl.getModel();
    }

    private void sales() {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/YYYY");
        LocalDateTime now = LocalDateTime.now();

        String date = dtf.format(now);
        String t = lbl_total.getText();
        String c = txt_cash.getText();
        String b = lbl_balance.getText();

        double total = Double.parseDouble(t);
        double cash = Double.parseDouble(c);
        double balance = Double.parseDouble(b);

        String sql = "insert into sales (Datee,SubTotal,Pay,Balance) values ('" + date + "' , "
                + total + " , "
                + cash + " , "
                + balance + ")";
        db.database.RunNonQuery(sql);

        String sales_ID = p.getID();
        //db.database.RunNonQuery(sales_ID);
        //Tools.msg(sales_ID);
        int ID = Integer.parseInt(sales_ID);
        String product_ID = "";
        String P = "";
        String q = "";
        String total_string = "";

        int row = tbl.getRowCount();

        for (int i = 0; i < tbl.getRowCount(); i++) {
            product_ID = (String) tbl.getValueAt(i, 0);
            P = (String) tbl.getValueAt(i, 2);
            q = (String) tbl.getValueAt(i, 3);
            total_string = (String) tbl.getValueAt(i, 4);

            double price = Double.parseDouble(P);
            double total_cash = Double.parseDouble(total_string);
            int qty = Integer.parseInt(q);

            boolean check;

            String query = "insert into sales_product (Sales_ID,Prod_ID,Sell_Price,QTY,Total) values ("
                    + ID + " , "
                    + "'" + product_ID + "' , "
                    + price + " , "
                    + qty + " , "
                    + total_cash + ")";
            db.database.RunNonQuery(query);
        }

        //Tools.msg("Record Saved");
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/market2?useUnicode=true&characterEncoding=UTF-8&serverTimezone = UTC", "root", "");
        } catch (Exception ex) {
            Tools.msg(ex.getMessage());
        }

        String query = "update product set product.Qty = Qty - ? where Barcode = ?";
        try {
            insert = con.prepareStatement(query);
            for (int i = 0; i < tbl.getRowCount(); i++) {
                boolean check;
                product_ID = (String) tbl.getValueAt(i, 0);
                q = (String) tbl.getValueAt(i, 3);

                insert.setString(1, q);
                insert.setString(2, product_ID);
                check = insert.execute();
            }
            insert.addBatch();
            //Tools.msg("Successfully deducted from stock");

        } catch (SQLException ex) {
            Logger.getLogger(POS.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void printB() {
        java.util.Date dt = new java.util.Date();
        txt_bill.setText(txt_bill.getText() + "كاشير :" + lbl_user.getText() + "\n");
        txt_bill.setText(txt_bill.getText() + "************************************\n");
        txt_bill.setText(txt_bill.getText() + "*************سوبر ماركت**************");
        txt_bill.setText(txt_bill.getText() + "\n");
        txt_bill.setText(txt_bill.getText() + "************************************\n");
        txt_bill.setText(txt_bill.getText() + dt);
        txt_bill.setText(txt_bill.getText() + "\n");
        txt_bill.setText(txt_bill.getText() + "الإجمالي" + "\t");
        txt_bill.setText(txt_bill.getText() + " السعر" + "\t");
        txt_bill.setText(txt_bill.getText() + " الكمية" + "\t");
        txt_bill.setText(txt_bill.getText() + " المنتج" + "\t");
        txt_bill.setText(txt_bill.getText() + "\n");
        for (int i = 0; i < tbl.getRowCount(); i++) {

            String Name = (String) tbl.getValueAt(i, 1);
            String qty = (String) tbl.getValueAt(i, 3);
            String price = (String) tbl.getValueAt(i, 2);
            String total = (String) tbl.getValueAt(i, 4);

            txt_bill.setText(txt_bill.getText() + total + "\t");
            txt_bill.setText(txt_bill.getText() + price + "\t");
            txt_bill.setText(txt_bill.getText() + qty + "\t");
            txt_bill.setText(txt_bill.getText() + Name + "\t");
            txt_bill.setText(txt_bill.getText() + "\n");
        }
        txt_bill.setText(txt_bill.getText() + "************************************\n");
        txt_bill.setText(txt_bill.getText() + "الإجمالي        : " + lbl_total.getText() + "\n");
        txt_bill.setText(txt_bill.getText() + "المبلغ المدفوع : " + txt_cash.getText() + "\n");
        txt_bill.setText(txt_bill.getText() + "الباقي         : " + lbl_balance.getText() + "\n");
        txt_bill.setText(txt_bill.getText() + "************************************\n");
        txt_bill.setText(txt_bill.getText() + "نشكركم لثقتكم بمنتاجتنا" + "\n");
        txt_bill.setText(txt_bill.getText() + "************************************\n");
        try {
            txt_bill.print();
        } catch (PrinterException ex) {
            Logger.getLogger(POS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean checkfoundation() {
        boolean check = db.database.checkinsertion(txt_code.getText());
        return check;
    }

    private void add() {
        //boolean check=db.database.checkinsertion(txt_code.getText());
        char pri[] = txt_price.getText().toCharArray();
        char quanty[] = txt_qty.getText().toCharArray();
        char cash[] = txt_cash.getText().toCharArray();
        for (int i = 0; i < pri.length; i++) {
            if (!(pri[i] == '0' || pri[i] == '.' || pri[i] == '1' || pri[i] == '2' || pri[i] == '3' || pri[i] == '4' || pri[i] == '5' || pri[i] == '6' || pri[i] == '7' || pri[i] == '8' || pri[i] == '9')) {
                Tools.msg("Can't save alphabetic in this field");
                txt_price.setText("");
                txt_price.requestFocus();
                break;
            }
        }
        for (int i = 0; i < quanty.length; i++) {
            if (!(quanty[i] == '0' || quanty[i] == '1' || quanty[i] == '2' || quanty[i] == '3' || quanty[i] == '4' || quanty[i] == '5' || quanty[i] == '6' || quanty[i] == '7' || quanty[i] == '8' || quanty[i] == '9')) {
                Tools.msg("Can't save alphabetic in this field");
                txt_qty.setText("");
                txt_qty.requestFocus();
                break;
            }
        }
        for (int i = 0; i < cash.length; i++) {
            if (!(cash[i] == '.' || cash[i] == '0' || cash[i] == '1' || cash[i] == '2' || cash[i] == '3' || cash[i] == '4' || cash[i] == '5' || cash[i] == '6' || cash[i] == '7' || cash[i] == '8' || cash[i] == '9')) {
                Tools.msg("Can't save alphabetic in this field");
                txt_cash.setText("");
                txt_cash.requestFocus();
                break;
            }
        }
        if ("".equals(txt_code.getText()) || "".equals(txt_name.getText())
                || "".equals(txt_price.getText()) || "".equals(txt_qty.getText())) {
        } else {
            String bar = txt_code.getText();
            String txtprice = txt_price.getText();
            String txtname = txt_name.getText();
            String quantity = p.getqty(bar);
            int qty = Integer.parseInt(txt_qty.getText());
            double price = Double.parseDouble(txt_price.getText());
            double sub = price * qty;
            //convert the returned value from getqty fun. to double
            double q = Double.parseDouble(quantity);
            //compare between quantity which user entered and quantity in stock
            if (qty >= q) {
                String msg = "Available quantity of this product in stock is " + q;
                Tools.msg(msg);
                txt_qty.setText("");
                txt_qty.requestFocus();
            } else {
                String lbl = String.valueOf(sub);
                lbl_sub.setText(lbl);
                String quant = String.valueOf(qty);
                String subtotal = lbl_sub.getText();
                //===================================================
                double subt = Double.parseDouble(lbl_sub.getText());
                double total = Double.parseDouble(lbl_total.getText());
                total += subt;
                lbl_total.setText(String.valueOf(total));
                //===================================================
                setTable();
                Object rows[] = {bar, txtname, txtprice, quant, subtotal};
                model.addRow(rows);
                txt_code.setText("");
                txt_name.setText("");
                txt_price.setText("");
                txt_qty.setText("");
                txt_code.requestFocus();
            }
        }
    }

    private void delete() {
        if (Tools.ConfirmMsg("Are You Sure You Want To Delete this Itme ?")) {

            setTable();
            int row = tbl.getSelectedRow();
            // get label total and store in lbltotal
            double lbltotal = Double.parseDouble(lbl_total.getText());
            //get value of total amount in table
            Object ob = tbl.getModel().getValueAt(row, 4);
            //convert value to string then to double to be able to subtract
            String test = ob.toString();
            double test2 = Double.parseDouble(test);
            //set the total label with all values - deleted item
            double fin = lbltotal - test2;
            lbl_total.setText(String.valueOf(fin));
            //delete selected row
            model.removeRow(row);
            lbl_sub.setText("0.0");
            txt_bill.setText("");
        }
    }

    private void printbtn() {
        double cash = Double.parseDouble(txt_cash.getText());
        double total = Double.parseDouble(lbl_total.getText());
        double result = cash - total;
        lbl_balance.setText(String.valueOf(result));
        if ("".equals(txt_bill.getText())) {
            printB();
            sales();
        } else {
            printB();
        }
    }


    private void btn_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delActionPerformed
        // TODO add your handling code here:  
        //model.removeRow(tbl.getSelectedRow());
        delete();
    }//GEN-LAST:event_btn_delActionPerformed

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        // TODO add your handling code here:
        if ("".equals(txt_cash.getText())) {
            Tools.msg("Enter cash value");
        }
        if ("".equals(txt_bill.getText())) {
            printbtn();
        } else if (!"".equals(txt_bill.getText())){
            try {
                txt_bill.print();
            } catch (PrinterException ex) {
                Logger.getLogger(POS.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_printActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        main m = new main(username);
        m.setTitle("Main Menu");
        this.dispose();
        Tools.open(m);
    }//GEN-LAST:event_btn_backActionPerformed

    pos p = new pos();

    private void txt_codeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String bar = txt_code.getText();
            String name = p.getName(bar);
            String price = p.getPrice(bar);
            txt_name.setText(name);
            txt_price.setText(price);
            String txtprice = txt_price.getText();
            String txtname = txt_name.getText();
            txt_qty.requestFocus();
        }
    }//GEN-LAST:event_txt_codeKeyPressed


    private void txt_codeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codeKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar() == 10) {
            String bar = txt_code.getText();
            String name = p.getName(bar);
            String price = p.getPrice(bar);
            txt_name.setText(name);
            txt_price.setText(price);
            txt_qty.requestFocus();
        }
    }//GEN-LAST:event_txt_codeKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        btn_add.setEnabled(true);
        btn_del.setEnabled(false);
        txt_code.requestFocus();
        tbl.getTableHeader().setReorderingAllowed(false);

        lbl_user.setText(username);
    }//GEN-LAST:event_formWindowOpened

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        // TODO add your handling code here:
        btn_add.setEnabled(false);
        btn_del.setEnabled(true);
    }//GEN-LAST:event_tblMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        btn_add.setEnabled(true);
        btn_del.setEnabled(false);
        //Tools.clear(this);
        txt_code.requestFocus();
    }//GEN-LAST:event_formMouseClicked

    private void txt_qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_qtyKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            add();
        } else if (evt.getKeyCode() == KeyEvent.VK_CONTROL) {
            add();
            txt_cash.requestFocus();
        }
    }//GEN-LAST:event_txt_qtyKeyPressed

    private void tblKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblKeyPressed
        // TODO add your handling code here:
        if (!btn_add.isEnabled()) {
            delete();
        }
    }//GEN-LAST:event_tblKeyPressed

    private void txt_cashKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cashKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            /*printbtn();
            //lbl_balance.requestFocus();
        }*/
            if (!"".equals(txt_bill.getText())) {
                try {
                    txt_bill.print();
                } catch (PrinterException ex) {
                    Logger.getLogger(POS.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if ("".equals(txt_bill.getText())){
                printbtn();
            }
        }
    }//GEN-LAST:event_txt_cashKeyPressed

    private void lbl_balanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbl_balanceKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            printbtn();
            //lbl_balance.requestFocus();
        }
    }//GEN-LAST:event_lbl_balanceKeyPressed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        txt_bill.setText("");
    }//GEN-LAST:event_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(POS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(POS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(POS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(POS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new POS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private control.JMyButton btn_add;
    private control.JMyButton btn_back;
    private control.JMyButton btn_del;
    private control.JMyButton btn_print;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_balance;
    private javax.swing.JLabel lbl_sub;
    private javax.swing.JLabel lbl_total;
    private javax.swing.JLabel lbl_user;
    private javax.swing.JLabel log;
    private control.JMyButton reset;
    private javax.swing.JTable tbl;
    private javax.swing.JTextArea txt_bill;
    private javax.swing.JTextField txt_cash;
    private javax.swing.JTextField txt_code;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_price;
    private javax.swing.JTextField txt_qty;
    // End of variables declaration//GEN-END:variables
}
